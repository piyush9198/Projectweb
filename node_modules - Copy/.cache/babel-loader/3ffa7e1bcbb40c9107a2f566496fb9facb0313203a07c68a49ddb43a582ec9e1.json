{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\09367096\\\\Desktop\\\\ReactJS_with_backend_and_frontend-main\\\\ReactJS_with_backend_and_frontend-main\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nexport default function Home() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = Home;\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Contact() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [selectData, setSelectData] = useState([]);\n  const [selectValue, setSelectValue] = useState('');\n  useEffect(() => {\n    let processing = true;\n    axiosFetchData(processing);\n    return () => {\n      processing = false;\n    };\n  }, []);\n\n  // this code shows how to use the React fetch http for GET and POST\n  // const fetchData = async(processing) => {\n  //     const options = {\n  //         method: 'POST',\n  //         headers: {'Content-type': 'application/json'},\n  //         body: JSON.stringify({\n  //             email: email,\n  //             message: message\n  //         })\n  //     }\n  //\n  //     await fetch('https://jsonplaceholder.typicode.com/users')\n  //     .then(res => res.json())\n  //     .then(data => {\n  //         if (processing) {\n  //             setSelectData(data)\n  //         }\n  //     })\n  //     .catch(err => console.log(err))\n  // }\n\n  const axiosFetchData = async processing => {\n    await axios.get('http://localhost:4000/users').then(res => {\n      if (processing) {\n        setSelectData(res.data);\n      }\n    }).catch(err => console.log(err));\n  };\n  const axiosPostData = async () => {\n    const postData = {\n      email: email,\n      website: selectValue,\n      message: message\n    };\n    await axios.post('http://localhost:4000/contact/send', postData).then(res => setError( /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success\",\n      children: res.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 31\n    }, this)));\n  };\n  const SelectDropdown = () => {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectValue,\n      onChange: e => setSelectValue(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \" -- Select One -- \"\n      }, \"none\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), selectData === null || selectData === void 0 ? void 0 : selectData.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.website,\n        children: item.website\n      }, item.website, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!message) {\n      setError( /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"required\",\n        children: \"Message is empty. Please type a message.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 22\n      }, this));\n    } else {\n      setError('');\n      axiosPostData();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact Us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"contactForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"How Did You Hear About Us?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectDropdown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"message\",\n        name: \"message\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), error, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Contact, \"irMUIeS0z1LZwe6xJhUxpDlc/OA=\");\n_c2 = Contact;\nvar _c, _c2;\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"Contact\");","map":{"version":3,"names":["Home","_jsxDEV","_Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","useState","useEffect","axios","jsxDEV","Fragment","Contact","_s","email","setEmail","message","setMessage","error","setError","selectData","setSelectData","selectValue","setSelectValue","processing","axiosFetchData","get","then","res","data","catch","err","console","log","axiosPostData","postData","website","post","className","SelectDropdown","value","onChange","e","target","map","item","handleSubmit","preventDefault","type","id","name","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/09367096/Desktop/ReactJS_with_backend_and_frontend-main/ReactJS_with_backend_and_frontend-main/frontend/src/pages/Home.js"],"sourcesContent":["export default function Home() {\n    return (\n        <>\n            <h1>Homepage</h1>\n            \n        </>\n    )\n}\n\nimport { useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\nfunction Contact() {\n    const [email, setEmail] = useState('')\n    const [message, setMessage] = useState('')\n    const [error, setError] = useState('')\n    const [selectData, setSelectData] = useState([])\n    const [selectValue, setSelectValue] = useState('')\n\n    useEffect( () => {\n        let processing = true\n        axiosFetchData(processing)\n        return () => {\n            processing = false\n        }\n    },[])\n\n    // this code shows how to use the React fetch http for GET and POST\n    // const fetchData = async(processing) => {\n    //     const options = {\n    //         method: 'POST',\n    //         headers: {'Content-type': 'application/json'},\n    //         body: JSON.stringify({\n    //             email: email,\n    //             message: message\n    //         })\n    //     }\n    //\n    //     await fetch('https://jsonplaceholder.typicode.com/users')\n    //     .then(res => res.json())\n    //     .then(data => {\n    //         if (processing) {\n    //             setSelectData(data)\n    //         }\n    //     })\n    //     .catch(err => console.log(err))\n    // }\n\n    const axiosFetchData = async(processing) => {\n        await axios.get('http://localhost:4000/users')\n        .then(res => {\n            if (processing) {\n                setSelectData(res.data)\n            }\n        })\n        .catch(err => console.log(err))\n    }\n\n    const axiosPostData = async() => {\n        const postData = {\n            email: email,\n            website: selectValue,\n            message: message\n        }\n\n        await axios.post('http://localhost:4000/contact/send', postData)\n        .then(res => setError(<p className=\"success\">{res.data}</p>))\n    }\n\n    const SelectDropdown = () => {\n        return (\n            <select value={selectValue} onChange={(e) => setSelectValue(e.target.value)}>\n                <option value=\"\" key=\"none\"> -- Select One -- </option>\n                {\n                    selectData?.map( (item) => (\n                        <option value={item.website} key={item.website}>{item.website}</option>\n                    ))\n                }\n            </select>\n        )\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (!message) {\n            setError(<p className=\"required\">Message is empty. Please type a message.</p>)\n        } else {\n            setError('')\n            axiosPostData()\n        }\n    }\n\n    return (\n        <>\n            <h1>Contact Us</h1>\n\n            <form className=\"contactForm\">\n                <label>Email</label>\n                <input type=\"text\" id=\"email\" name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n\n                <label>How Did You Hear About Us?</label>\n                <SelectDropdown />\n\n                <label>Message</label>\n                <textarea id=\"message\" name=\"message\" value={message} onChange={(e) => setMessage(e.target.value)}></textarea>\n                \n                {error}\n\n                <button type=\"submit\" onClick={handleSubmit}>Submit</button>\n            </form>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}